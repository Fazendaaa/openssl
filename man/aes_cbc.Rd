% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/aes.R
\name{aes_cbc}
\alias{aes_cbc}
\alias{aes_cbc_decrypt}
\alias{aes_cbc_encrypt}
\title{AES encryption}
\usage{
aes_cbc_encrypt(x, key, iv = rand_bytes(16))

aes_cbc_decrypt(x, key, iv = attr(x, "iv"))
}
\arguments{
\item{x}{raw vector with data to encrypt/decrypt}

\item{key}{raw vector of length 16, 24 or 32, e.g. a password hash}

\item{iv}{raw initialization vector of length 16 (aes block size)}
}
\description{
Encrypt and decrypt data with a symmetric key using the AES block
cipher in CBC mode.
}
\examples{
# aes-256 requires 32 byte key
password <- charToRaw("supersecret")
key <- sha256(password)

# symmetric encryption uses same key for decryption
x <- serialize(iris, NULL)
y <- aes_cbc_encrypt(x, key = key)
x2 <- aes_cbc_decrypt(y, key = key)
identical(x, x2)
}

