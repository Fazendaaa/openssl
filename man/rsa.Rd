% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/rsa.R
\name{rsa}
\alias{rsa}
\alias{rsa_decrypt}
\alias{rsa_encrypt}
\title{RSA encryption and signing}
\usage{
rsa_encrypt(msg, key = "~/.ssh/id_rsa.pub")

rsa_decrypt(ciphertext, key = "~/.ssh/id_rsa")
}
\arguments{
\item{msg}{raw vector of max 245 bytes with data to encrypt}

\item{key}{path the file or raw/character vector with the RSA key}

\item{ciphertext}{raw vector with encrypted message}
}
\description{
Asymmetric encryption/decryption and signature verification using RSA.
RSA messages have a max length of 245 bytes. Typically RSA is used to
exchange a symmetric key for encrypting larger data using e.g. AES.
}
\examples{
\dontrun{
# encrypt some data using e.g. AES
tempkey <- rand_bytes(32)
iv <- rand_bytes(16)
blob <- aes_cbc_encrypt(system.file("CITATION"), tempkey, iv = iv)

#encrypt temp key using receivers public RSA key
cryptkey <- rsa_encrypt(tempkey, "~/.ssh/id_rsa.pub")

#receiver decrypts tempkey from private RSA key
tempkey <- rsa_decrypt(cryptkey, "~/.ssh/id_rsa")
message <- aes_cbc_decrypt(blob, tempkey, iv)
cat(rawToChar(message))
}
}

