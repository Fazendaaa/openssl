#!/bin/bash

# Custom include path for compatibility
if [ "$OPENSSL_INCLUDES" ]; then
  echo "PKG_CPPFLAGS= -I$OPENSSL_INCLUDES" > src/Makevars
  echo "PKG_LIBS= -lssl -lcrypto" >> src/Makevars
  exit 0
fi

# Use backticks to be bourne compliant
PKGCONFIG=$(command -v pkg-config)

# Try pkg-config first if available
if [ "$PKGCONFIG" ]; then
  PKG_CFLAGS=$(pkg-config --cflags libssl)
  PKG_LIBS=$(pkg-config --libs libssl)
fi

# See if pkg-config succeeded. PKG_CFLAGS can be empty
if [ "$PKG_CFLAGS" ] || [ "$PKG_LIBS" ]; then
  echo "Using pkg-config cflags and libs"
elif [ -r "/opt/csw/include/openssl/rand.h" ]; then
  PKG_CFLAGS="-I/opt/csw/include"
  PKG_LIBS="-L/opt/csw/lib -lssl -lcrypto"
elif [ -r "/usr/include/openssl/rand.h" ]; then
  PKG_CFLAGS="-I/usr/include"
elif [ -r "/usr/local/include/openssl/rand.h" ]; then
  PKG_CFLAGS="-I/usr/local/include"
else
  echo "Could not find openssl. Please install libssl-dev (deb) or openssl-devel (rpm)."
  exit 1
fi

# Clean Makevars
echo "# Auto generated by configure" > src/Makevars

# Write cflags to Makevars
if [ "$PKG_CFLAGS" ]; then
  echo "PKG_CPPFLAGS= $PKG_CFLAGS" >> src/Makevars
  echo "Found cflags: $PKG_CFLAGS"
fi

# Use linker flags if found
if [ "$PKG_LIBS" ]; then
  echo "PKG_LIBS= $PKG_LIBS" >> src/Makevars
  echo "Found ldflags: $PKG_LIBS"
else
  echo "PKG_LIBS= -lssl -lcrypto" >> src/Makevars
fi

exit 0
